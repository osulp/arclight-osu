version: 2.1
orbs:
  docker: circleci/docker@2.2.0
jobs:
  checkout_code:
    docker:
      - image: cimg/ruby:3.2.2
    working_directory: ~/app
    steps:
      - restore_cache:
          name: Restore code from cache
          keys:
            - v1-source-{{ .Branch }}-{{ .Revision }}
      - checkout
      - save_cache:
          name: Save code cache
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - persist_to_workspace:
          root: ~/
          paths:
            - app/*
            - app/**/*
  bundle:
    docker:
      - image: cimg/ruby:3.2.2-browsers
    environment:
      BUNDLE_PATH: vendor/bundle
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          name: Restore bundle from cache
          keys:
            - v2-bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: Update bundler
          command: gem install bundler -v 2.4.8
      - run:
          name: Install dependencies
          command: bundle check || bundle install
      - save_cache:
          name: Save bundle cache
          key: v2-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/app/vendor/bundle
      - persist_to_workspace:
          root: ~/
          paths:
            - app/*
            - app/**/*
  lint:
    docker:
      - image: cimg/ruby:3.2.2-browsers
    environment:
      BUNDLE_PATH: vendor/bundle
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Update bundler
          command: gem install bundler -v 2.4.8
      - run: bundle exec rubocop
  test:
    docker:
      - image: cimg/ruby:3.2.2-browsers
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          MARIADB_DATABASE: test
          MARIADB_PASSWORD: test
          MARIADB_USER: test
          MARIADB_ROOT_HOST: "127.0.0.1"
          REDIS_HOST: localhost
          REDIS_PORT: "6379"
          SECRET_KEY_BASE: bobross1234bobross1234bobross1234bobross1234bobross1234
          SOLR_URL: http://localhost:8985/solr/test
      - image: cimg/mariadb:10.11.2
        environment:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: test
          MARIADB_USER: test
          MARIADB_PASSWORD: test
      - image: cimg/redis:6.2
      - image: solr:8.11-slim
        command: bin/solr -cloud -noprompt -f -p 8985
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Update Debian Packages
          command: |
            sudo apt-get update -qq
            sudo apt-get upgrade -qq
            sudo apt-get install -y -f software-properties-common build-essential nodejs make apt-utils ffmpeg
            sudo apt-get install -y openjdk-8-jre-headless ca-certificates-java
            sudo apt-get install -y openjdk-8-jre openjdk-8-jdk openjdk-8-jdk-headless
            sudo apt-get install -y imagemagick graphicsmagick libopenjp2-tools
      - run:
          name: Load config into SolrCloud
          command: |
            cd ./solr/conf
            zip -1 -r solr_archlight_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_archlight_config.zip "http://localhost:8985/solr/admin/configs?action=UPLOAD&name=arclight"
            curl -H 'Content-type: application/json' http://localhost:8985/api/collections/ -d '{create: {name: test, config: arclight, numShards: 1}}'
      - run:
          name: Update bundler
          command: gem install bundler -v 2.1.4
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run: bundle exec rake db:create db:schema:load --trace
      - run:
          name: Run Tests
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: ./tmp/screenshots
      - store_artifacts:
          path: ./tmp/capybara
  build_and_push_beavernetes:
    parameters:
      repo:
        type: string
        default: ""
      environment:
        type: string
        default: "production"
    executor:
      name: "docker/docker"
    environment:
      DOCKER_LOGIN: admin
      DOCKER_PASSWORD: admin
      RAILS_ENV: production
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Generate deployed version
          command: |
            export GIT_SHORT_HASH=$(git rev-parse --short HEAD)
            export DATETIME=$(date "+%Y%m%d%H%M")
            export TAG="$DATETIME-$GIT_SHORT_HASH"
            export DEPLOYED_VERSION="$DATETIME-$GIT_SHORT_HASH"
            echo export RAILS_ENV="$RAILS_ENV" >> $BASH_ENV
            echo export TAG="$TAG" >> $BASH_ENV
            echo export DEPLOYED_VERSION="$DEPLOYED_VERSION" >> $BASH_ENV
      - setup_remote_docker:
          version: 20.10.12
      - docker/check:
          registry: registry.library.oregonstate.edu
      - docker/pull:
          images: registry.library.oregonstate.edu/arclight_osu_cache:latest
          ignore-docker-pull-error: true
      - docker/build:
          registry: registry.library.oregonstate.edu
          image: arclight_osu
          tag: $TAG
          extra_build_args: --build-arg RAILS_ENV=$RAILS_ENV --build-arg DEPLOYED_VERSION=$DEPLOYED_VERSION
          cache_from: registry.library.oregonstate.edu/arclight_osu_cache:latest
      - docker/push:
          registry: registry.library.oregonstate.edu
          image: arclight_osu
          tag: $TAG
      - docker/build:
          registry: registry.library.oregonstate.edu
          image: arclight_osu_cache
          tag: "latest"
          extra_build_args: --target gems
          cache_from: registry.library.oregonstate.edu/arclight_osu_cache:latest
          step-name: "Rebuild cache image"
      - docker/push:
          registry: registry.library.oregonstate.edu
          image: arclight_osu_cache
          tag: latest
          step-name: "Push cache image"
workflows:
  ci:
    jobs:
      - checkout_code
      - bundle:
          requires:
            - checkout_code
      - lint:
          requires:
            - bundle
      - test:
          requires:
            - lint
          filters:
            branches:
              ignore: main
      - build_and_push_beavernetes:
          name: Build and push application image to Beavernetes image repository
          requires:
            - lint
            - test
          # filters:
          #   branches:
          #     only:
          #       - main
          #       - /infra\/.*/
          repo: arclight_osu
          environment: production

version: '3.8'

volumes:
  app:
  db:
  bundled:
  solr:
  redis:


networks:
  external:
  internal:


x-common-variables:
  &common-variables
  ACTIVE_JOB_QUEUE_ADAPTER: sidekiq
  CAS_URL: https://login.oregonstate.edu/cas
  RAILS_CACHE_STORE_URL: memcache
  RAILS_ENV: development
  RAILS_LOG_TO_STDOUT: true
  RAILS_SERVE_STATIC_FILES: true
  DB_USER: development
  DB_PASSWORD: 12341234
  DB_DATABASE: development
  DB_ROOT_PASSWORD: 12341234
  REDIS_URL: redis://redis:6379/1

services:
  ##
  # Run an instance of MySQL with a database named 'development' for running specs. See config/database.yml
  db:
    &db
    image: mysql:8.0
    restart: always
    environment:
      <<: *common-variables
      MYSQL_USER: development
      MYSQL_PASSWORD: 12341234
      MYSQL_DATABASE: development
      MYSQL_ROOT_PASSWORD: 12341234
    volumes:
      - db:/var/lib/mysql
      - ./config/mysql/mysqld.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      internal:

        ##
        # Run an instance of MySQL with a database named 'test' for running specs. See config/database.yml. Has no volume
        # and doesn't intend on persisting data across sessions.
  db-test:
    <<: *db
    environment:
      <<: *common-variables
      MYSQL_USER: test
      MYSQL_PASSWORD: 12341234
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: 12341234
    networks:
      internal:
    tmpfs: /var/lib/mysql
      ##
      # Basic image for the rails application server, see Dockerfile
  app:
    &app
    build: .
    volumes:
      - .:/data
      - bundled:/usr/local/bundle
    entrypoint: /data/build/entrypoint.sh
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      internal:

        ##
        # Run the application in the currently set RAILS_ENV, set to development by default in the .env file.
  server:
    <<: *app
    environment:
      <<: *common-variables
      ARCHIVESSPACE_API_USER: admin
      ARCHIVESSPACE_API_PASS: admin
      ARCHIVESSPACE_API_URL: https://sandbox.archivesspace.org/staff/api/
      RAILS_ENV: development
      DB_HOST: db
      SOLR_URL: http://solr-dev:8983/solr/development
    depends_on:
      - db
      - solr-dev
      - redis

  test:
    <<: *app
    environment:
      <<: *common-variables
      ARCHIVESSPACE_API_USER: test
      ARCHIVESSPACE_API_PASS: test
      ARCHIVESSPACE_API_URL: http://localhost:3001
      RAILS_ENV: test
      DB_HOST: db-test
      DB_USER: test
      DB_DATABASE: test
      SOLR_URL: http://solr-test:8983/solr/test
    depends_on:
      - db-test
      - solr-test
      - redis

  solr:
    &solr
    image: solr:8.11-slim
    expose:
      - 8983
    ports:
      - 8983:8983
    networks:
      - internal
    environment:
      - OOM=crash
      - SOLR_HEAP=2g
  solr-dev:
    <<: *solr
    volumes:
      - ./solr/conf:/opt/solr/arclight_conf
      # We have to mount the entire /var/solr dir because otherwise permissions
      # get messed up by docker
      - solr:/var/solr
    command:
      - solr-precreate
      - development
      - /opt/solr/arclight_conf
  solr-test:
    <<: *solr
    volumes:
      - ./solr/conf:/opt/solr/arclight_conf
    command:
      - solr-precreate
      - test
      - /opt/solr/arclight_conf

  ##
  # Load balancer, although not strictly necessary.. would allow the app to work with regular port 80
  # lb:
  #   image: dockercloud/haproxy:1.5.3
  #   links:
  #     - web
  #   environment:
  #     - DOCKER_TLS_VERIFY
  #     - DOCKER_HOST
  #     - DOCKER_CERT_PATH
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     # You must uncomment this line if and only if you are running docker-machine
  #     # - $DOCKER_CERT_PATH:$DOCKER_CERT_PATH
  #   networks:
  #     internal:
  #     external:

  ##
  # Redis for the background job queues
  redis:
    image: redis:alpine
    volumes:
      - redis:/data
    networks:
      internal:
